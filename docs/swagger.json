{
  "swagger": "2.0",
  "info": {
    "description": "\nVipps PSP API gives the PSP the ability to process Vipps payment as a part  of their payment offerings. By using PSP API, PSP’s still have full\n transactional  control for payments initiated in their payment terminals. VVipps PSP API allows  PSP’s to initiate payments for end users to accept with the Vipps mobile app.  After customer confirms the payment, Vipps enrich payment  data with encrypted  credit card details and hand over payment processing to the PSP\n\n# Idempotency\nAll API requests in Vipps eCommerce can be retried without any side effects by providing idempotent key in a header of  the request. For example, in case the request fails because of network error it can safely be retried with the same idempotent key. Idempotent key is generated by merchant.\n\n  ```\n  X-Request-Id: slvnwdcweofjwefweklfwelf\"\n  ```\n\n# Authentication\nEvery API call is authenticated and authorized based on the application Authorization token (JWT Bearer token) and APIM subscription key (Ocp-Apim-Subscription-Key). In addition, APP Id need to be provided in request header in order to authenticate the application the merchant has registered. Following headers are required to be there in every API request to successfully authenticate every API call.\n\n  | **Header Name** | **Header Value** | **Description** |\n  | :-------------------------- | :--------------------------- | :--------------------------------------------- |\n  | Authorization | Bearer 'jwt_access_token'' | type: Authorization token<br>Value: Access token is obtained by registering merchant backend application in Merchant Developer Portal. |\n  | Ocp-Apim-Subscription-Key | Base 64 encoded string | Subscription key for eCommerce product.<br>This can be found in User Profile page on Merchant developer portal after merchant account is created |\n",
    "version": "1.0",
    "title": "PSP API V2"
  },
  "host": "localhost:8090",
  "basePath": "/dwo-api-application",
  "tags": [
    {
      "name": "dwo-merchant-query-controller",
      "description": "DWO Merchant Query Controller"
    },
    {
      "name": "psp-initiate-payment-controller",
      "description": "PSP Initiate Payment Controller"
    },
    {
      "name": "psp-payment-controller",
      "description": "PSP Payment Controller"
    }
  ],
  "paths": {
    "/v2/psppayments/init": {
      "post": {
        "tags": [
          "psp-initiate-payment-controller"
        ],
        "summary": "Initiate a PSP Payment",
        "operationId": "initiatePaymentV2UsingPOST",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer JWT-TOKEN",
            "required": true,
            "type": "string",
            "default": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbml6YXRpb25OdW1iZXIiOiI5MTg3MTM4NjciLCJpc3MiOiJ2aXBwcy5ubyIsImV4cCI6MTY0NDc0Mzg5NywiYWNjb3VudE51bWJlciI6IjE4MDAwMDAwMDAwIn0.mqO4RsidM_-twRfCvgNnXUUPrXaTgFVMvkJTVmJgtmbHziMVxHnG9moHpEj90_A3MRPp_jucdgMnqixgExOykJCLX6VsiUB0qMLXTgBE7Mmkz3lk0jCgv7OwYDJuLksrXvLepD68KdyDTCVwPxdgqh_H9Tea7S3gSYUnYoNkNP5h7Eyvai6U7BuJVcoE5ckO1ZjGmOvNlfHUbAZYBH8I5RV96bnmEtdtkojrkoZtT7HjueyTZODfdaOyvI5VfMLKbr9qGkYKP0UBKTp9ST5eV-W_Y062PgOsfRNXL2-ltKgn0vDkpUWYGiA8Y98ondXLF1kQIc8pAFPAwhzWG31oM_wKeOjjjK-2lMg1X1LjTk-zbq0HBilhQzbXdW0PHws0p1UZgviW-bdIwRfcjn1ysEqzS0HzDuaRTGIQDeld3MrtcwLLce7PT4rSGZeoJM-pUTidztzX48pFUixLm-aa1-SWnbRIqUufmsylSJNZXjgS06pISGUMKPiAdSjINY17x8YkeptS1B_r56oshRY8BFffCPxtMJI1BAWYQBCQ8WvUadlWNrQ477kUuvauEPRK_eyXT83cANaEa39lBPz4J3PHAE6grV4c3G_rClFzaFl1mzrhUABKJ3CpP_q7LmkboXSI5xx0BkyIb4wG_eG1s7_E_P_T0hIj3CTBNZnu7mI"
          },
          {
            "name": "MERCHANT-SERIAL-NUMBER",
            "in": "header",
            "description": "MERCHANT-SERIAL-NUMBER",
            "required": true,
            "type": "string",
            "default": "12345"
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Subscription key for eCommerce product. This can be found in User Profile page on Merchant developer portal after merchant account is created",
            "required": true,
            "type": "string",
            "default": "c1b1a8846ec56d09db39bd3b5403bf9"
          },
          {
            "name": "PSP-ID",
            "in": "header",
            "description": "PSP-ID",
            "required": true,
            "type": "string",
            "default": "C948DFD1546347568874C4DDC93A2E3C"
          },
          {
            "in": "body",
            "name": "pspInitiatePaymentRequestDTO",
            "description": "pspInitiatePaymentRequestDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PSPInitiatePaymentRequestV2DTO"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InitiatePaymentRepresentation"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorDetails"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorDetails"
              }
            }
          },
          "503" : {
            "description" : "Service unavailable"
          },
          "504" : {
            "description" : "Gateway Timeout"
          }
        },
        "deprecated": false
      }
    },
    "[\"makePayment\"]": {
      "post": {
        "tags": [
          "psp-initiate-payment-controller"
        ],
        "summary": "Service end-point exposed by PSP. Used to transfer credit card data from TSP to PSP to complete initialized transaction.\nOutcome of transactional processing (RESERVE|CAPTURE|REJECT) will be shown at PSP payment console but Vipps must be informed if payment is refused (credit card expired, not enough funds etc) or OK.\n\nCommunication security is established by using 1-way SSL and makePaymentToken (If exists in request body)",
        "operationId": "makePaymentSwaggerUsingPOST",
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "type": "string",
            "default": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbml6YXRpb25OdW1iZXIiOiI5MTg3MTM4NjciLCJpc3MiOiJ2aXBwcy5ubyIsImV4cCI6MTY0NDc0Mzg5NywiYWNjb3VudE51bWJlciI6IjE4MDAwMDAwMDAwIn0.mqO4RsidM_-twRfCvgNnXUUPrXaTgFVMvkJTVmJgtmbHziMVxHnG9moHpEj90_A3MRPp_jucdgMnqixgExOykJCLX6VsiUB0qMLXTgBE7Mmkz3lk0jCgv7OwYDJuLksrXvLepD68KdyDTCVwPxdgqh_H9Tea7S3gSYUnYoNkNP5h7Eyvai6U7BuJVcoE5ckO1ZjGmOvNlfHUbAZYBH8I5RV96bnmEtdtkojrkoZtT7HjueyTZODfdaOyvI5VfMLKbr9qGkYKP0UBKTp9ST5eV-W_Y062PgOsfRNXL2-ltKgn0vDkpUWYGiA8Y98ondXLF1kQIc8pAFPAwhzWG31oM_wKeOjjjK-2lMg1X1LjTk-zbq0HBilhQzbXdW0PHws0p1UZgviW-bdIwRfcjn1ysEqzS0HzDuaRTGIQDeld3MrtcwLLce7PT4rSGZeoJM-pUTidztzX48pFUixLm-aa1-SWnbRIqUufmsylSJNZXjgS06pISGUMKPiAdSjINY17x8YkeptS1B_r56oshRY8BFffCPxtMJI1BAWYQBCQ8WvUadlWNrQ477kUuvauEPRK_eyXT83cANaEa39lBPz4J3PHAE6grV4c3G_rClFzaFl1mzrhUABKJ3CpP_q7LmkboXSI5xx0BkyIb4wG_eG1s7_E_P_T0hIj3CTBNZnu7mI"
          },
          {
            "name": "MERCHANT-SERIAL-NUMBER",
            "in": "header",
            "description": "Identifies a merchant sales channel",
            "required": true,
            "type": "string",
            "default": "12345"
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Subscription key for eCommerce product. This can be found in User Profile page on Merchant developer portal after merchant account is created",
            "required": true,
            "type": "string",
            "default": "c1b1a8846ec56d09db39bd3b5403bf9"
          },
          {
            "name": "PSP-ID",
            "in": "header",
            "description": "PSP ID as defined during PSP enrollment. PSP should share a public key to encrypt the card data from TSP via Vipps",
            "required": true,
            "type": "string",
            "default": "C948DFD1546347568874C4DDC93A2E3C"
          },
          {
            "in": "body",
            "name": "makePaymentRequest",
            "description": "makePaymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MakePaymentRequestPSPV2"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MakePaymentResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/psppayments/updateStatus": {
      "post": {
        "tags": [
          "psp-payment-controller"
        ],
        "summary": "Update the status of the PSP transaction. Since Vipps doesn’t process transactions, updates on payment status are required in order to deliver expected customer experience. That means that PSP has to inform Vipps about any psp payment status change through this service",
        "operationId": "updateStatusUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer JWT-TOKEN",
            "required": true,
            "type": "string",
            "default": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbml6YXRpb25OdW1iZXIiOiI5MTg3MTM4NjciLCJpc3MiOiJ2aXBwcy5ubyIsImV4cCI6MTY0NDc0Mzg5NywiYWNjb3VudE51bWJlciI6IjE4MDAwMDAwMDAwIn0.mqO4RsidM_-twRfCvgNnXUUPrXaTgFVMvkJTVmJgtmbHziMVxHnG9moHpEj90_A3MRPp_jucdgMnqixgExOykJCLX6VsiUB0qMLXTgBE7Mmkz3lk0jCgv7OwYDJuLksrXvLepD68KdyDTCVwPxdgqh_H9Tea7S3gSYUnYoNkNP5h7Eyvai6U7BuJVcoE5ckO1ZjGmOvNlfHUbAZYBH8I5RV96bnmEtdtkojrkoZtT7HjueyTZODfdaOyvI5VfMLKbr9qGkYKP0UBKTp9ST5eV-W_Y062PgOsfRNXL2-ltKgn0vDkpUWYGiA8Y98ondXLF1kQIc8pAFPAwhzWG31oM_wKeOjjjK-2lMg1X1LjTk-zbq0HBilhQzbXdW0PHws0p1UZgviW-bdIwRfcjn1ysEqzS0HzDuaRTGIQDeld3MrtcwLLce7PT4rSGZeoJM-pUTidztzX48pFUixLm-aa1-SWnbRIqUufmsylSJNZXjgS06pISGUMKPiAdSjINY17x8YkeptS1B_r56oshRY8BFffCPxtMJI1BAWYQBCQ8WvUadlWNrQ477kUuvauEPRK_eyXT83cANaEa39lBPz4J3PHAE6grV4c3G_rClFzaFl1mzrhUABKJ3CpP_q7LmkboXSI5xx0BkyIb4wG_eG1s7_E_P_T0hIj3CTBNZnu7mI"
          },
          {
            "name": "MERCHANT-SERIAL-NUMBER",
            "in": "header",
            "description": "MERCHANT-SERIAL-NUMBER",
            "required": true,
            "type": "string",
            "default": "12345"
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Subscription key for eCommerce product. This can be found in User Profile page on Merchant developer portal after merchant account is created",
            "required": true,
            "type": "string",
            "default": "c1b1a8846ec56d09db39bd3b5403bf9"
          },
          {
            "name": "PSP-ID",
            "in": "header",
            "description": "PSP-ID",
            "required": true,
            "type": "string",
            "default": "C948DFD1546347568874C4DDC93A2E3C"
          },
          {
            "in": "body",
            "name": "pspPaymentStatusDTO",
            "description": "pspPaymentStatusDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PSPV2PaymentStatusDTO"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ResponseInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorDetails"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorDetails"
              }
            }
          },
          "503" : {
            "description" : "Service unavailable"
          },
          "504" : {
            "description" : "Gateway Timeout"
          }
        },
        "deprecated": false
      }
    },
    "/v2/psppayments/{pspTransactionId}/details": {
      "get": {
        "tags": [
          "dwo-merchant-query-controller"
        ],
        "summary": "The details of PSP Payment",
        "operationId": "getPSPPaymentDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer JWT-TOKEN",
            "required": true,
            "type": "string",
            "default": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbml6YXRpb25OdW1iZXIiOiI5MTg3MTM4NjciLCJpc3MiOiJ2aXBwcy5ubyIsImV4cCI6MTY0NDc0Mzg5NywiYWNjb3VudE51bWJlciI6IjE4MDAwMDAwMDAwIn0.mqO4RsidM_-twRfCvgNnXUUPrXaTgFVMvkJTVmJgtmbHziMVxHnG9moHpEj90_A3MRPp_jucdgMnqixgExOykJCLX6VsiUB0qMLXTgBE7Mmkz3lk0jCgv7OwYDJuLksrXvLepD68KdyDTCVwPxdgqh_H9Tea7S3gSYUnYoNkNP5h7Eyvai6U7BuJVcoE5ckO1ZjGmOvNlfHUbAZYBH8I5RV96bnmEtdtkojrkoZtT7HjueyTZODfdaOyvI5VfMLKbr9qGkYKP0UBKTp9ST5eV-W_Y062PgOsfRNXL2-ltKgn0vDkpUWYGiA8Y98ondXLF1kQIc8pAFPAwhzWG31oM_wKeOjjjK-2lMg1X1LjTk-zbq0HBilhQzbXdW0PHws0p1UZgviW-bdIwRfcjn1ysEqzS0HzDuaRTGIQDeld3MrtcwLLce7PT4rSGZeoJM-pUTidztzX48pFUixLm-aa1-SWnbRIqUufmsylSJNZXjgS06pISGUMKPiAdSjINY17x8YkeptS1B_r56oshRY8BFffCPxtMJI1BAWYQBCQ8WvUadlWNrQ477kUuvauEPRK_eyXT83cANaEa39lBPz4J3PHAE6grV4c3G_rClFzaFl1mzrhUABKJ3CpP_q7LmkboXSI5xx0BkyIb4wG_eG1s7_E_P_T0hIj3CTBNZnu7mI"
          },
          {
            "name": "MERCHANT-SERIAL-NUMBER",
            "in": "header",
            "description": "MERCHANT-SERIAL-NUMBER",
            "required": true,
            "type": "string",
            "default": "12345"
          },
          {
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header",
            "description": "Subscription key for eCommerce product. This can be found in User Profile page on Merchant developer portal after merchant account is created",
            "required": true,
            "type": "string",
            "default": "c1b1a8846ec56d09db39bd3b5403bf9"
          },
          {
            "name": "PSP-ID",
            "in": "header",
            "description": "PSP-ID",
            "required": true,
            "type": "string",
            "default": "C948DFD1546347568874C4DDC93A2E3C"
          },
          {
            "name": "pspTransactionId",
            "in": "path",
            "description": "pspTransactionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PSPPaymentDetailsRepresentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorDetails"
              }
            }
          },
          "503" : {
            "description" : "Service unavailable"
          },
          "504" : {
            "description" : "Gateway Timeout"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "BaseErrorResult": {
      "type": "object",
      "title": "BaseErrorResult"
    },
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "developerMsg": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "errorField": {
          "type": "string"
        },
        "errorKey": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorResult": {
          "$ref": "#/definitions/BaseErrorResult"
        }
      },
      "title": "ErrorDetails"
    },
<<<<<<< HEAD
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "errorId": {
          "type": "string",
          "example": 81,
          "description": "PSP native ID of the error"
        },
        "errorText": {
          "type": "string",
          "example": "No Such Issuer",
          "description": "PSP native textual representation of the error"
        }
      },
      "title": "ErrorMessage"
    },
    "GenericResponse": {
      "type": "object",
      "properties": {
        "responseInfo": {
          "$ref": "#/definitions/ResponseInfo"
        },
        "result": {
          "type": "object"
        }
      },
      "title": "GenericResponse"
    },
    "InitiatePaymentPspV2Representation": {
      "type": "object",
      "properties": {
        "pspTransactionId": {
          "type": "string",
          "example": "7686f7788898767977",
          "description": "Used as a globally unique transaction reference for the PSP systems"
        },
        "merchantOrderId": {
          "type": "string",
          "example": "8874C4DDC93A2E3C",
          "description": "Uniquely identifies a payment order for a merchant"
        },
        "vippsRedirectUrl": {
          "type": "string",
          "example": "https://psp.vipps.io",
          "description": "Vipps URL where customer can enter their mobile number"
        }
      },
      "title": "InitiatePaymentPspV2Representation"
=======
    "ErrorMessage" : {
      "type" : "object",
      "properties" : {
        "errorId" : {
          "type" : "string",
          "description" : "PSP native ID of the error",
          "example" : "81"
        },
        "errorText" : {
          "type" : "string",
          "description" : "PSP native textual representation of the error",
          "example" : "No Such Issuer"
        }
      },
      "example" : {
        "errorText" : "No Such Issuer",
        "errorId" : "81"
      }
    },
    "InitiatePaymentRepresentation" : {
      "type" : "object",
      "required" : [ "merchantOrderId", "pspTransactionId", "vippsRedirectUrl" ],
      "properties" : {
        "merchantOrderId" : {
          "type" : "string",
          "description" : "Uniquely identifies a payment order for a merchant",
          "example" : "8874C4DDC93A2E3C"
        },
        "pspTransactionId" : {
          "type" : "string",
          "description" : "Used as a globally unique transaction reference for the PSP systems",
          "example" : "7686f7788898767977"
        },
        "vippsRedirectUrl" : {
          "type" : "string",
          "description" : "Vipps URL where customer can enter their mobile number",
          "example" : "https://vipps.io"
        }
      },
      "example" : "{\n  \"merchantOrderId\": \"8874C4DDC93A2E3C\",\n  \"pspTransactionId\": \"7686f7788898767977\",\n  \"vippsRedirectUrl\": \"https://vipps.io\"\n}"
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
    },
    "MakePaymentRequest" : {
      "type" : "object",
      "required" : [ "cardData", "confirmed", "merchantSerialNumber", "pspTransactionId" ],
      "properties" : {
        "pspTransactionId" : {
          "type" : "string",
          "description" : "Used as a globally unique transaction reference for the PSP systems",
          "example" : "7686f7788898767977"
        },
        "merchantSerialNumber" : {
          "type" : "string",
          "description" : "Uniquely identifies a payment order for a merchant",
          "example" : "8874C4DDC93A2E3C"
        },
        "cardData" : {
          "type" : "string",
          "description" : "Encrypted credit card details",
          "example" : "f0a29801b4#d4ff30e221fa2980ff30e2"
        },
        "confirmed" : {
          "type" : "string",
          "description" : "Credit Card Details Encryption Status",
          "enum" : [ "YES", "NO", "TIMEOUT", "CANCEL" ],
          "example" : "YES"
        }
      },
<<<<<<< HEAD
      "title": "MakePaymentRequestPSPV2"
=======
      "example" : "{\n  \"cardData\": \"f0a29801b4#d4ff30e221fa2980ff30e2\",\n  \"merchantSerialNumber\": \"8874C4DDC93A2E3C\",\n  \"pspTransactionId\": \"7686f7788898767977\",\n  \"confirmed\": \"YES/NO/TIMEOUT/CANCEL\"\n}"
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
    },
    "MakePaymentResponse" : {
      "type" : "object",
      "required" : [ "errorMessage", "paymentInfo" ],
      "properties" : {
        "errorMessage" : {
          "$ref" : "#/definitions/ErrorMessage"
        },
        "paymentInfo" : {
          "$ref" : "#/definitions/PaymentInfo"
        }
      },
<<<<<<< HEAD
      "title": "MakePaymentResponsePSPV2"
    },
    "PSPInitiatePaymentRequestV2DTO": {
      "type": "object",
      "properties": {
        "merchantSerialNumber": {
          "type": "string"
        },
        "pspId": {
          "type": "string"
        },
        "pspTransactionId": {
          "type": "string",
          "example": "7686f7788898767977",
          "description": "Used as a globally unique transaction reference for the PSP systems"
        },
        "merchantOrderId": {
          "type": "string",
          "example": "8874C4DDC93A2E3C",
          "description": "Uniquely identifies a payment order for a merchant"
        },
        "customerMobileNumber": {
          "type": "string",
          "example": 92929292,
          "description": "Mobile number of the user who has to pay for the transaction from Vipps"
        },
        "amount": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "Amount should be specified in Øre. 100 Øre conversion 1.00 NOK"
        },
        "currency": {
          "type": "string",
          "example": "NOK",
          "description": "ISO 4217 defined currency code. Currently Vipps only supports NOK"
        },
        "pspRedirectUrl": {
          "type": "string",
          "example": "https://psp.vipps.io",
          "description": "Vipps will use this URL to redirect end user after payment confirmation"
        },
        "makePaymentUrl": {
          "type": "string",
          "example": "https://psp.vipps.io",
          "description": "PSP URL used by Vipps to send the card data"
        },
        "makePaymentToken": {
          "type": "string",
          "example": "ynuiu",
          "description": "Authorization header for MakePayment call"
        },
        "paymentText": {
          "type": "string",
          "example": "Order id :",
          "description": "Text to be displayed to end user"
        },
        "isApp": {
          "type": "boolean",
          "example": true,
          "description": "Indicates whether payment request is triggered from Mobile App or Web browser"
        }
      },
      "title": "PSPInitiatePaymentRequestV2DTO"
    },
    "PSPPaymentDetailsRepresentation": {
      "type": "object",
      "properties": {
        "pspTransactionId": {
          "type": "string",
          "example": 12345692,
          "description": "PSP ID as defined in agreement with Netaxept TSP. PSP should have agreement with Netaxept to get the public key to encrypt the card data from NetAxept TSP via Vipps"
        },
        "merchantOrderId": {
          "type": "string",
          "example": 56787837,
          "description": "Id which uniquely identifies a payment"
        },
        "transactionSummary": {
          "$ref": "#/definitions/TransactionSummary"
        },
        "transactionLogHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PSPPaymentTransactionDetailsDVO"
          }
        }
      },
      "title": "PSPPaymentDetailsRepresentation"
=======
      "example" : "{\n  \"errorMessage\": {\n    \"errorText\": \"No Such Issuer\",\n    \"errorId\": \"81\"\n  },\n  \"paymentInfo\": {\n    \"pspTransactionId\": \"7686f7788898767977\",\n    \"status\": \"RESERVE|CAPTURE|REJECT\"\n  }\n}"
    },
    "InitiatePaymentRequest" : {
      "type" : "object",
      "required" : [ "amount", "currency", "customerMobileNumber", "isApp", "makePaymentToken", "makePaymentUrl", "merchantOrderId", "merchantSerialNumber", "paymentText", "pspId", "pspRedirectUrl", "pspTransactionId" ],
      "properties" : {
        "merchantSerialNumber" : {
          "type" : "string"
        },
        "pspId" : {
          "type" : "string"
        },
        "pspTransactionId" : {
          "type" : "string",
          "description" : "Used as a globally unique transaction reference for the PSP systems",
          "example" : "7686f7788898767977"
        },
        "merchantOrderId" : {
          "type" : "string",
          "description" : "Uniquely identifies a payment order for a merchant",
          "example" : "8874C4DDC93A2E3C"
        },
        "customerMobileNumber" : {
          "type" : "string",
          "description" : "Mobile number of the user who has to pay for the transaction from Vipps",
          "example" : "92929292"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Amount should be specified in Øre. 100 Øre conversion 1.00 NOK",
          "example" : 100
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO 4217 defined currency code. Currently Vipps only supports NOK",
          "example" : "NOK"
        },
        "pspRedirectUrl" : {
          "type" : "string",
          "description" : "Vipps will use this URL to redirect end user after payment confirmation",
          "example" : "https://psp.vipps.io"
        },
        "makePaymentUrl" : {
          "type" : "string",
          "description" : "PSP URL used by Vipps to send the card data",
          "example" : "https://psp.vipps.io"
        },
        "makePaymentToken" : {
          "type" : "string",
          "description" : "Authorization header for MakePayment call",
          "example" : "ynuiu"
        },
        "paymentText" : {
          "type" : "string",
          "description" : "Text to be displayed to end user",
          "example" : "Order id : "
        },
        "isApp" : {
          "type" : "boolean",
          "description" : "Indicates whether payment request is triggered from Mobile App or Web browser",
          "example" : true
        }
      },
      "example" : "{\n  \"pspRedirectUrl\": \"https://psp.vipps.io\",\n  \"amount\": 100,\n  \"makePaymentToken\": \"ynuiu\",\n  \"makePaymentUrl\": \"https://psp.vipps.io\",\n  \"merchantSerialNumber\": \"12345\",\n  \"pspId\": \"C948DFD1546347568874C4DDC93A2E3C\",\n  \"customerMobileNumber\": \"92929292\",\n  \"currency\": \"NOK\",\n  \"merchantOrderId\": \"8874C4DDC93A2E3C\",\n  \"isApp\": true,\n  \"pspTransactionId\": \"7686f7788898767977\",\n  \"paymentText\": \"Order id : \"\n}"
    },
    "PaymentTransactionDetails" : {
      "type" : "object",
      "required" : [ "amount", "operation", "timeStamp" ],
      "properties" : {
        "amount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Amount should be specified in Øre. 100 Øre conversion 1.00 NOK",
          "example" : 100
        },
        "paymentText" : {
          "type" : "string",
          "description" : "Transaction Note sent by PSP",
          "example" : "Betaling ordreid:"
        },
        "timeStamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Timestamp in ISO-8601 representing when Vipps did the payment",
          "example" : "2018-06-13T18:34:25-07:00"
        },
        "operation" : {
          "type" : "string",
          "description" : "Transaction Status",
          "example" : "REFUNDED"
        },
        "operationSuccess" : {
          "type" : "boolean",
          "description" : "Success or failure for the given operation",
          "example" : false
        }
      },
      "example" : "{\n  \"timeStamp\": \"2018-06-13T18:34:25-07:00\",\n  \"amount\": 100,\n  \"paymentText\": \"Betaling ordreid:\",\n  \"operation\": \"REFUNDED\",\n  \"operationSuccess\": false\n}"
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
    },
    "PaymentStatus" : {
      "type" : "object",
      "properties" : {
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionInfo"
          }
        }
      },
<<<<<<< HEAD
      "title": "PSPPaymentTransactionDetailsDVO"
=======
      "example" : "{\n  \"transactions\": [\n    {\n      \"amount\": 100,\n      \"currency\": \"NOK\",\n      \"pspTransactionId\": \"7686f7788898767977\",\n      \"paymentText\": \"Betaling ordreid: 893746\",\n      \"status\": \"CAPTURED\"\n    },\n    {\n      \"amount\": 100,\n      \"currency\": \"NOK\",\n      \"pspTransactionId\": \"7686f7788898767977\",\n      \"paymentText\": \"Betaling ordreid: 893746\",\n      \"status\": \"CAPTURED\"\n    }\n  ]\n}"
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
    },
    "TransactionInfo" : {
      "type" : "object",
      "required" : [ "amount", "currency", "paymentText", "pspTransactionId", "status" ],
      "properties" : {
        "pspTransactionId" : {
          "type" : "string",
          "description" : "PSP ID as defined in agreement with Netaxept TSP. PSP should have agreement with Netaxept to get the public key to encrypt the card data from NetAxept TSP via Vipps",
          "example" : "7686f7788898767977"
        },
        "status" : {
          "type" : "string",
          "description" : "PSP Transaction Status to be updated in Vipps",
          "example" : "CAPTURED"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Amount should be specified in Øre. 100 Øre conversion 1.00 NOK",
          "example" : 100
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO 4217 defined currency code. Currently Vipps only supports NOK",
          "example" : "NOK"
        },
        "paymentText" : {
          "type" : "string",
          "example" : "Betaling ordreid: 893746"
        }
      },
<<<<<<< HEAD
      "title": "PSPV2PaymentStatusDTO"
=======
      "example" : "{\n  \"amount\": 100,\n  \"currency\": \"NOK\",\n  \"pspTransactionId\": \"7686f7788898767977\",\n  \"paymentText\": \"Betaling ordreid: 893746\",\n  \"status\": \"CAPTURED\"\n}"
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
    },
    "PaymentDetailsRepresentation" : {
      "type" : "object",
      "properties" : {
        "pspTransactionId" : {
          "type" : "string",
          "description" : "PSP ID as defined in agreement with Netaxept TSP. PSP should have agreement with Netaxept to get the public key to encrypt the card data from NetAxept TSP via Vipps",
          "example" : "12345692"
        },
        "merchantOrderId" : {
          "type" : "string",
          "description" : "Id which uniquely identifies a payment",
          "example" : "56787837"
        },
        "transactionSummary" : {
          "$ref" : "#/definitions/TransactionSummary"
        },
        "transactionLogHistory" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentTransactionDetails"
          }
        }
      },
<<<<<<< HEAD
      "title": "PSPV2TransactionInfo"
=======
      "example" : "{\n  \"merchantOrderId\": \"56787837\",\n  \"transactionSummary\": {\n    \"capturedAmount\": 0,\n    \"remainingAmountToRefund\": 0,\n    \"remainingAmountToCapture\": 0,\n    \"refundedAmount\": 1200\n  },\n  \"pspTransactionId\": \"12345692\",\n  \"transactionLogHistory\": [\n    {\n      \"timeStamp\": \"2018-06-13T18:34:25-07:00\",\n      \"amount\": 100,\n      \"paymentText\": \"Betaling ordreid:\",\n      \"operation\": \"REFUNDED\",\n      \"operationSuccess\": false\n    },\n    {\n      \"timeStamp\": \"2018-06-13T18:34:25-07:00\",\n      \"amount\": 100,\n      \"paymentText\": \"Betaling ordreid:\",\n      \"operation\": \"REFUNDED\",\n      \"operationSuccess\": false\n    }\n  ]\n}"
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
    },
    "PaymentInfo" : {
      "type" : "object",
      "properties" : {
        "pspTransactionId" : {
          "type" : "string",
          "description" : "Used as a globally unique transaction reference for the PSP systems",
          "example" : "7686f7788898767977"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the transaction",
          "enum" : [ "OK", "FAIL" ],
          "example" : "OK"
        }
      },
<<<<<<< HEAD
      "title": "PaymentInfoPSPV2"
    },
    "ResponseInfo": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
=======
      "example" : "{\n  \"pspTransactionId\": \"7686f7788898767977\",\n  \"status\": \"RESERVE|CAPTURE|REJECT\"\n}"
    },
    "AuthorizationTokenResponse" : {
      "type" : "object",
      "required" : [ "access_token", "expires_in", "ext_expires_in", "not_before", "resource", "token_type" ],
      "properties" : {
        "token_type" : {
          "type" : "string"
        },
        "access_token" : {
          "type" : "string"
        },
        "ext_expires_in" : {
          "type" : "integer"
        },
        "not_before" : {
          "type" : "integer"
        },
        "expires_in" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resource" : {
          "type" : "string"
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
        }
      },
      "title": "ResponseInfo"
    },
    "TransactionSummary" : {
      "type" : "object",
      "properties" : {
        "capturedAmount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total amount captured",
          "example" : 0
        },
        "remainingAmountToCapture" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total remaining amount to capture",
          "example" : 0
        },
        "refundedAmount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total refunded amount of the order",
          "example" : 1200
        },
        "remainingAmountToRefund" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total remaining amount to refund",
          "example" : 0
        }
      },
<<<<<<< HEAD
      "title": "TransactionSummary"
=======
      "example" : {
        "capturedAmount" : 0,
        "remainingAmountToRefund" : 0,
        "remainingAmountToCapture" : 0,
        "refundedAmount" : 1200
      }
    },
    "ResponseInfo" : {
      "type" : "object",
      "required" : [ "responseCode", "responseMessage" ],
      "properties" : {
        "responseCode" : {
          "type" : "string"
        },
        "responseMessage" : {
          "type" : "string"
        }
      }
>>>>>>> 4e663209eadf7342a559133313e381aa3693b539
    }
  }
}
